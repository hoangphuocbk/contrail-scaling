heat_template_version: 2015-04-30

description: Autoscaling Contrail Service Instance HOT

parameters:
  service_template_name:
    type: string
    label: Service template fq name
    description: Service template for port tuple
  service_template_properties_version:
    type: string
    description: Indicates service version
  service_template_properties_service_mode:
    type: string
    description: service mode
  service_template_properties_service_type:
    type: string
    description: service type
  service_template_properties_image_name:
    type: string
    description: Name of the image
  service_template_properties_flavor:
    type: string
    description: Flavor
  service_template_properties_ordered_interfaces:
    type: string
    description: Indicates service interfaces are ordered
  service_template_properties_interface_type_service_interface_type_1:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_interface_type_service_interface_type_2:
    type: string
    description: service_interface_type for the ServiceTemplate
  service_template_properties_service_scaling:
    type: string
    description: Indicates whether service scaling is enabled
  service_template_properties_availability_zone_enable:
    type: string
    description: Indicates availability zone is enabled
  service_template_properties_service_virtualization_type:
    type: string
    description: Indicates virtualization type
  service_instance_name:
    type: string
    label: Service instance fq name
    description: Service instance for port tuple
  left_network:
    type: string
    description: Name of left network
  right_network:
    type: string
    description: Name of right network
  domain:
    type: string
    description: Name of the Domain
  port_tuple_name:
    type: string
    description: name of Port Tuple
  fq_name_virtual_network1:
    type: string
    description: fully-qualified name of network 1
  fq_name_virtual_network2:
    type: string
    description: fully-qualified name of network 2

resources:
  template_ServiceTemplate:
    type: OS::ContrailV2::ServiceTemplate
    properties:
      name: { get_param: service_template_name }
      service_template_properties:
        {
          service_template_properties_version: { get_param: service_template_properties_version },
          service_template_properties_service_mode: { get_param: service_template_properties_service_mode },
          service_template_properties_service_type: { get_param: service_template_properties_service_type },
          service_template_properties_image_name: { get_param: service_template_properties_image_name },
          service_template_properties_service_scaling: { get_param: service_template_properties_service_scaling },
          service_template_properties_interface_type:
            [
              {
              service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_1 },
              },
              {
              service_template_properties_interface_type_service_interface_type: { get_param: service_template_properties_interface_type_service_interface_type_2 },
              }
            ],
          service_template_properties_flavor: { get_param: service_template_properties_flavor },
          service_template_properties_ordered_interfaces: { get_param: service_template_properties_ordered_interfaces },
          service_template_properties_service_virtualization_type: { get_param: service_template_properties_service_virtualization_type },
          service_template_properties_availability_zone_enable: { get_param: service_template_properties_availability_zone_enable },
        }
      domain: { get_param: domain }

  template_ServiceInstance:
    type: OS::ContrailV2::ServiceInstance
    depends_on: [ template_ServiceTemplate ]
    properties:
      name: { get_param: service_instance_name }
      service_instance_properties:
        {
          service_instance_properties_interface_list:
            [
              {
              service_instance_properties_interface_list_virtual_network:
                {
                   get_param: fq_name_virtual_network1
                },
              },
              {
              service_instance_properties_interface_list_virtual_network:
                {
                   get_param: fq_name_virtual_network2
                },
              }
            ],
        }
      service_template_refs: [{ get_resource: template_ServiceTemplate }]

  instance_group:
    type: OS::Heat::AutoScalingGroup
    properties:
      cooldown: 60
      desired_capacity: 1
      max_size: 4
      min_size: 1
      resource:
        type: service-instance-autoscale-depends.yaml
        properties:
          image: { get_param: service_template_properties_image_name }
          flavor: { get_param: service_template_properties_flavor }
          virtual_network_1: { get_param: left_network }
          virtual_network_1_fqdn: { get_param: fq_name_virtual_network1 }
          virtual_network_2: { get_param: right_network }
          virtual_network_2_fqdn: { get_param: fq_name_virtual_network1 }
          service_instance_name: { list_join: [':', { get_attr: [ template_ServiceInstance, fq_name ] } ] }
          service_interface_type_1: 'left'
          service_interface_type_2: 'right'
          port_tuple_name: port_tuple_name

  scaleup_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: instance_group }
      cooldown: 60
      scaling_adjustment: 1

  cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 30
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [scaleup_policy, alarm_url]}
      comparison_operator: gt

  scaledown_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: instance_group }
      cooldown: 60
      scaling_adjustment: -1

  cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      meter_name: cpu_util
      statistic: avg
      period: 30
      evaluation_periods: 1
      threshold: 20
      alarm_actions:
        - {get_attr: [scaledown_policy, alarm_url]}
      comparison_operator: lt
